from typing import Any, Optional

LOG: Any
ACL_ORIGIN: str
ACL_METHODS: str
ACL_ALLOW_HEADERS: str
ACL_EXPOSE_HEADERS: str
ACL_CREDENTIALS: str
ACL_MAX_AGE: str
ACL_REQUEST_METHOD: str
ACL_REQUEST_HEADERS: str
ALL_METHODS: Any
CONFIG_OPTIONS: Any
FLASK_CORS_EVALUATED: str
RegexObject: Any
DEFAULT_OPTIONS: Any

def parse_resources(resources: Any): ...
def get_regexp_pattern(regexp: Any): ...
def get_cors_origins(options: Any, request_origin: Any): ...
def get_allow_headers(options: Any, acl_request_headers: Any): ...
def get_cors_headers(options: Any, request_headers: Any, request_method: Any): ...
def set_cors_headers(resp: Any, options: Any): ...
def probably_regex(maybe_regex: Any): ...
def re_fix(reg: Any): ...
def try_match_any(inst: Any, patterns: Any): ...
def try_match(request_origin: Any, maybe_regex: Any): ...
def get_cors_options(appInstance: Any, *dicts: Any): ...
def get_app_kwarg_dict(appInstance: Optional[Any] = ...): ...
def flexible_str(obj: Any): ...
def serialize_option(options_dict: Any, key: Any, upper: bool = ...) -> None: ...
def ensure_iterable(inst: Any): ...
def sanitize_regex_param(param: Any): ...
def serialize_options(opts: Any): ...
